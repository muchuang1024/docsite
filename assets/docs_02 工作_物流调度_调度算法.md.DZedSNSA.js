import{_ as a,c as e,o,a4 as i}from"./chunks/framework.4aTu-Nia.js";const q=JSON.parse('{"title":"一、问题定义","description":"","frontmatter":{},"headers":[],"relativePath":"docs/02 工作/物流调度/调度算法.md","filePath":"docs/02 工作/物流调度/调度算法.md"}'),t={name:"docs/02 工作/物流调度/调度算法.md"},r=i('<p>#运筹优化</p><h1 id="一、问题定义" tabindex="-1">一、问题定义 <a class="header-anchor" href="#一、问题定义" aria-label="Permalink to &quot;一、问题定义&quot;">​</a></h1><p>在前置仓配送系统中，一个核心问题是如何高效地将订单分配给骑手，以确保订单及时准确地送达顾客手中。这个问题涉及到多个因素，包括订单的紧急程度、骑手的位置和状态、配送路线的选择等。合理的订单分配策略可以提高配送效率，减少成本，提高顾客满意度。</p><h1 id="二、问题建模" tabindex="-1">二、问题建模 <a class="header-anchor" href="#二、问题建模" aria-label="Permalink to &quot;二、问题建模&quot;">​</a></h1><h2 id="一-决策变量" tabindex="-1">一）决策变量 <a class="header-anchor" href="#一-决策变量" aria-label="Permalink to &quot;一）决策变量&quot;">​</a></h2><p>$x_{i j}$ : 如果订单 <code>i</code> 被分配给骑手 <code>j</code>，则 $x_{i j}$ = 1，否则 $x_{i j}$ = 0</p><h2 id="二-目标函数" tabindex="-1">二）目标函数 <a class="header-anchor" href="#二-目标函数" aria-label="Permalink to &quot;二）目标函数&quot;">​</a></h2><p>1、最小化总配送时间：$\\min \\sum_{i, j} t_{i j} x_{i j}$，其中 $t_{ij}$​ 表示订单 <code>i</code> 由骑手 <code>j</code> 配送的时长（预计送达时间 - now）</p><p>2、最小化总配送成本：$\\min \\sum_{i, j} t_{i j} c_{i j}$，其中 $c_{ij}$​ 表示订单 <code>i</code> 由骑手 <code>j</code> 配送的成本（人力成本+运营成本）</p><p>人力成本 = 骑手工作时长 * 时薪 运营成本 = 骑行距离 * 电动车运营成本</p><p>3、超时程度</p><p>4、骑手顺路程度</p><p>5、优先级违背惩罚</p><p>6、骑手跨相关区域惩罚</p><h2 id="三-约束条件" tabindex="-1">三）约束条件 <a class="header-anchor" href="#三-约束条件" aria-label="Permalink to &quot;三）约束条件&quot;">​</a></h2><p>1、每个订单只能分配给一个骑手</p><p>$\\sum_j x_{i j}=1$，对所有订单 <code>i</code></p><p>2、订单时间窗约束</p><p>确保订单在规定的时间内送达</p><p>对于每一个订单 <code>i</code>, 有一个时间窗 $\\left[e_i, l_i\\right]$，其中 $e_i$ 是订单 <code>i</code> 的最早可接受配送时间，$l_i$ 是订单 <code>i</code> 的最晚可接受配送时间。</p><p>同时假设 $t_{ij}$ 是骑手 <code>j</code> 从前置仓出发到完成订单 <code>i</code> 的配送所需的时间。</p><p>则时间窗约束可以表示为：</p><p>$e_i \\leq t_{i j} x_{i j} \\leq l_i, \\quad \\forall i, \\forall j$</p><p>3、骑手的配送能力限制</p><p>$\\sum_i x_{i j} \\leq \\text { Capacity }_j$</p><p>对所有骑手 <code>j</code>，其中 ${ Capacity }_j$ 是骑手 <code>j</code> 的最大配送能力</p><p>4、骑手载具的重量限制</p><p>$\\sum_i x_{i j} \\leq \\text { Weight }_j$</p><p>对所有骑手 <code>j</code>，其中 ${ Weight }_j$ 是骑手 <code>j</code> 的最大载重量</p><p>5、骑手顺路程度</p><p>聚集度 角度 绕路比</p><h1 id="三、模型求解" tabindex="-1">三、模型求解 <a class="header-anchor" href="#三、模型求解" aria-label="Permalink to &quot;三、模型求解&quot;">​</a></h1><h2 id="一-订单召回" tabindex="-1">一）订单召回 <a class="header-anchor" href="#一-订单召回" aria-label="Permalink to &quot;一）订单召回&quot;">​</a></h2><h3 id="_1、待分拣订单" tabindex="-1">1、待分拣订单 <a class="header-anchor" href="#_1、待分拣订单" aria-label="Permalink to &quot;1、待分拣订单&quot;">​</a></h3><p>都不召回</p><h3 id="_2、分拣中订单" tabindex="-1">2、分拣中订单 <a class="header-anchor" href="#_2、分拣中订单" aria-label="Permalink to &quot;2、分拣中订单&quot;">​</a></h3><p>不召回超过 10 分钟未分拣完的订单 不召回未到最早可处理时间的订单</p><h3 id="_3、待配送订单" tabindex="-1">3、待配送订单 <a class="header-anchor" href="#_3、待配送订单" aria-label="Permalink to &quot;3、待配送订单&quot;">​</a></h3><p>不召回未到最早可处理时间的订单</p><h2 id="二-骑手召回" tabindex="-1">二）骑手召回 <a class="header-anchor" href="#二-骑手召回" aria-label="Permalink to &quot;二）骑手召回&quot;">​</a></h2><h3 id="_1、计算骑手平均负载" tabindex="-1">1、计算骑手平均负载 <a class="header-anchor" href="#_1、计算骑手平均负载" aria-label="Permalink to &quot;1、计算骑手平均负载&quot;">​</a></h3><p>在线压力 / 平均背单上限</p><h3 id="_2、计算召回骑手数" tabindex="-1">2、计算召回骑手数 <a class="header-anchor" href="#_2、计算召回骑手数" aria-label="Permalink to &quot;2、计算召回骑手数&quot;">​</a></h3><p>按照回店顺序召回骑手，直到召回骑手数可剩余背单 * 负载 &gt;= 待分配订单数</p><h3 id="_3、骑手数兜底" tabindex="-1">3、骑手数兜底 <a class="header-anchor" href="#_3、骑手数兜底" aria-label="Permalink to &quot;3、骑手数兜底&quot;">​</a></h3><p>最小骑手数1：对所有区域求和，得到总共需要的骑手数为: 区域单量 / 平均背单上限</p><p>$\\sum_i\\left\\lceil \\frac{n_i}{C_{\\text{avg}}} \\right\\rceil$</p><p>最小骑手数2：所有驻店骑手</p><h2 id="三-人单匹配" tabindex="-1">三）人单匹配 <a class="header-anchor" href="#三-人单匹配" aria-label="Permalink to &quot;三）人单匹配&quot;">​</a></h2><h3 id="_1、追单" tabindex="-1">1、追单 <a class="header-anchor" href="#_1、追单" aria-label="Permalink to &quot;1、追单&quot;">​</a></h3><p>遍历骑手，追加与骑士身上同用户的待分配订单 遍历骑手，追加与骑士身上同小区的待分配订单</p><h3 id="_2、分单" tabindex="-1">2、分单 <a class="header-anchor" href="#_2、分单" aria-label="Permalink to &quot;2、分单&quot;">​</a></h3><p>搜索算法：[[自适应大邻域搜索]] 多目标规划：[[帕累托最优]]</p><h3 id="_3、压单" tabindex="-1">3、压单 <a class="header-anchor" href="#_3、压单" aria-label="Permalink to &quot;3、压单&quot;">​</a></h3><p>骑手未驻店，压一压</p><h3 id="_4、退单" tabindex="-1">4、退单 <a class="header-anchor" href="#_4、退单" aria-label="Permalink to &quot;4、退单&quot;">​</a></h3><p>运力充足防止分配不顺路</p><h1 id="四、调度-case" tabindex="-1">四、调度 case <a class="header-anchor" href="#四、调度-case" aria-label="Permalink to &quot;四、调度 case&quot;">​</a></h1>',58),h=[r];function d(c,l,p,_,n,s){return o(),e("div",null,h)}const b=a(t,[["render",d]]);export{q as __pageData,b as default};
