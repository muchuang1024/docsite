import{_ as p,c as e,o as t,a4 as s}from"./chunks/framework.4aTu-Nia.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/02 技术/供应链技术/数据指标经验.md","filePath":"docs/02 技术/供应链技术/数据指标经验.md"}'),_={name:"docs/02 技术/供应链技术/数据指标经验.md"},a=s("<p>1、如果某个评价指标，从全国所有站点的角度去看，波动很大，则说明这个指标的选取有问题</p><p>选择其它指标或者看看这个指标的计算方式是否有问题</p><p>2、如果某个评价指标的平均值变化不明显，可以看长尾的情况</p><p>比如看看 该指标 95 分位数的变化情况</p><p>3、当策略优化的目标平均值还可以，可以看尾部的情况</p><p>比如优化 95分位数该指标的变化情况</p><p>4、通过看散点分布图，提出问题，找到异常点</p><p>查看异常点相关的 case，查看超预期相关的 case</p><p>5、拿到数据之后，不要急于对每项指标求平均值，先看下各项指标的数值范围是否符合预期</p><p>如果某个指标特别大或者特别下，导致平均值偏大或偏小，这个数据分析结论可能就是错误的</p><p>6、使用相对值还是绝对值</p><p>看数据的意义，如果相对值意义不大，则取绝对值，对比建议绝对值</p><p>7、评估的候选集一定要筛选好</p><p>个别站点前后数据缺失可能会影响整体结论</p><p>8、从多个维度去看 case</p><p>不要只从一个维度看 case，每个维度的影响是一样的，需要关注的点也不一样</p><p>9、排查站点某天手动干预率高的原因</p><p>降维，找到足够细分的场景，然后看 case</p><p>同维度对比：按日期对比，找到哪个节点贡献最大</p><p>降维对比：同小时对比，找到哪个小时贡献最大</p><p>降维对比：分析该小时，改派场景对比</p><p>10、站长改派和系统调度视角不一样</p><p>那就统一视角</p><p>11、分析 case 从长尾站点开始看</p><p>优化策略，也是验证长尾站点是否有改善</p><p>12、多个目标权衡的时候，不要基于单个预测类指标决策</p><p>比如预计超时 0 和 1 分钟，差别不大，但因为超时 &gt; 0，就选择了超时 = 0 的方案</p><p>第一优先级：未突破相关性 &amp; 未超时，cost 最低 第二优先级：未超时，cost 最低</p><p>13、调度的好坏，取决多种因素，比如预计送达时间、路径规划、预计出发时间，一旦预估不准，很难短期优化，所以考虑直观感受，比如订单紧急程度，能缓解一部分问题</p><p>14、评估指标</p><p>核心就是要找一个相对灵敏的指标，整体效果不明显时，看看对长尾样本的影响</p><p>全部样本平均值 长尾样本平均值</p><p>15、看数据的维度：粗中有细</p><p>有的时候全天去看效果并不明显，需要到一个更细的维度去看，比如小时维度，某个小时准时率特别差，但全天来看又还行</p><p>太细了会导致陷入细节，个别case 太粗了会导致掩盖了事实，需要筛选符合分析场景的样本</p>",35),c=[a];function o(r,n,d,i,m,l){return t(),e("div",null,c)}const T=p(_,[["render",o]]);export{h as __pageData,T as default};
