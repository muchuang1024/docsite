import{_ as a,c as s,o as n,a4 as p}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03 博客/教程/搭建 AI 微信机器人.md","filePath":"docs/03 博客/教程/搭建 AI 微信机器人.md"}'),e={name:"docs/03 博客/教程/搭建 AI 微信机器人.md"},t=p(`<p>AI 微信机器人是一种利用人工智能技术，为用户提供服务的自动化系统。它通常具备自然语言处理能力，能够理解用户的文本或语音输入，并给出相应的回复或执行特定的任务。</p><p>对于企业，可以被当作智能客服的替代方案，降本增效；对于个人，可以帮助管理社群，提高社群的活跃度，提升问答效率。</p><p>本文将提供保姆级的 AI 微信机器人搭建教程，希望对大家有帮助。</p><h2 id="一、效果展示" tabindex="-1">一、效果展示 <a class="header-anchor" href="#一、效果展示" aria-label="Permalink to &quot;一、效果展示&quot;">​</a></h2><p>1、询问机器人的角色</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213152.png" alt=""></p><p>2、询问今天的天气</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213236.png" alt="image.png"></p><p>3、询问今天的新闻</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213321.png" alt=""></p><h2 id="二、准备大模型账号" tabindex="-1">二、准备大模型账号 <a class="header-anchor" href="#二、准备大模型账号" aria-label="Permalink to &quot;二、准备大模型账号&quot;">​</a></h2><p>本文演示的 AI 机器人使用的是讯飞大模型（你也可以使用其它大模型，申请相应的 api_key 即可），讯飞大模型相比其它模型的优点是免费，注册即赠送 200万 Token。</p><h3 id="_1、注册账号" tabindex="-1">1、注册账号 <a class="header-anchor" href="#_1、注册账号" aria-label="Permalink to &quot;1、注册账号&quot;">​</a></h3><p>打开链接 <a href="https://xinghuo.xfyun.cn/sparkapi?scr=price" target="_blank" rel="noreferrer">https://xinghuo.xfyun.cn/sparkapi?scr=price</a> 点击免费试用即可，建议选择个人免费包</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510215430.png" alt=""></p><h3 id="_2、认证" tabindex="-1">2、认证 <a class="header-anchor" href="#_2、认证" aria-label="Permalink to &quot;2、认证&quot;">​</a></h3><p>未认证用户无法调用大模型接口，填写相关信息，几分钟就可以完成个人实名认证了，这是我见过最快的实名认证了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220404.png" alt=""></p><h3 id="_3、创建应用" tabindex="-1">3、创建应用 <a class="header-anchor" href="#_3、创建应用" aria-label="Permalink to &quot;3、创建应用&quot;">​</a></h3><p>填写应用名称、分类、描述创建</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220543.png" alt="image.png"></p><p>创建应用后，会得到服务接口认证相关信息，用于接口调用的签名参数</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220731.png" alt=""></p><h3 id="_4、领取-token" tabindex="-1">4、领取 token <a class="header-anchor" href="#_4、领取-token" aria-label="Permalink to &quot;4、领取 token&quot;">​</a></h3><p>1、左侧选择 v3.5 模型，然后点击立即购买</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510221145.png" alt=""></p><p>2、选择上面创建的应用和免费套餐</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510221056.png" alt=""></p><p>3、下单成功</p><p>回到 token 数量页面，这时候可以看到 剩余 token 数量已经加上了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220922.png" alt="image.png"></p><h2 id="三、服务搭建" tabindex="-1">三、服务搭建 <a class="header-anchor" href="#三、服务搭建" aria-label="Permalink to &quot;三、服务搭建&quot;">​</a></h2><h3 id="_1、环境安装" tabindex="-1">1、环境安装 <a class="header-anchor" href="#_1、环境安装" aria-label="Permalink to &quot;1、环境安装&quot;">​</a></h3><p>安装 python3</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>本项目需要使用 python 运行，建议安装 python3，按照官方教程安装即可</span></span></code></pre></div><p>使用 Git 下载官方项目代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git clone https://github.com/zhayujie/chatgpt-on-wechat</span></span></code></pre></div><p>进入项目目录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd chatgpt-on-wechat</span></span></code></pre></div><p>安装依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip3 install -r requirements.txt</span></span>
<span class="line"><span>pip3 install -r requirements-optional.txt</span></span></code></pre></div><h3 id="_2、配置" tabindex="-1">2、配置 <a class="header-anchor" href="#_2、配置" aria-label="Permalink to &quot;2、配置&quot;">​</a></h3><h3 id="_3、启动" tabindex="-1">3、启动 <a class="header-anchor" href="#_3、启动" aria-label="Permalink to &quot;3、启动&quot;">​</a></h3><p>前往 <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noreferrer">docker官网</a> 进行下载安装，安装后，在命令行 执行命令 <code>docker -v</code> ，如果出现版本号则代表安装成功</p><p>1、创建项目文件夹</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir wechat-bot</span></span>
<span class="line"><span>cd wechat-bot</span></span></code></pre></div><p>2、下载 docker-compose.yml 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wget https://open-1317903499.cos.ap-guangzhou.myqcloud.com/docker-compose.yml</span></span></code></pre></div><p>3、修改 docker-compose.yml 配置</p><p>下载完成后打开 <code>docker-compose.yml</code> 修改配置， <code>MODEL</code>, <code>API_KEY</code>、<code>GROUP_NAME_WHITE_LIST</code> 等。</p><p>这里我采用的模型是讯飞星火，你也可以用 openapi，选择模型好，配置相应的 api_key 即可</p><p>完成个人实名认证后，可免费购买 2000000 token</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240509234622.png" alt="image.png"></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>version: &#39;2.0&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  chatgpt-on-wechat:</span></span>
<span class="line"><span>    image: zhayujie/chatgpt-on-wechat</span></span>
<span class="line"><span>    container_name: chatgpt-on-wechat</span></span>
<span class="line"><span>    security_opt:</span></span>
<span class="line"><span>      - seccomp:unconfined</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      OPEN_AI_API_KEY: &#39;YOUR API KEY&#39;</span></span>
<span class="line"><span>      MODEL: &#39;xunfei&#39;</span></span>
<span class="line"><span>      PROXY: &#39;&#39;</span></span>
<span class="line"><span>      SINGLE_CHAT_PREFIX: &#39;[&quot;bot&quot;, &quot;@bot&quot;]&#39;</span></span>
<span class="line"><span>      SINGLE_CHAT_REPLY_PREFIX: &#39;&quot;[bot] &quot;&#39;</span></span>
<span class="line"><span>      GROUP_CHAT_PREFIX: &#39;[&quot;@bot&quot;]&#39;</span></span>
<span class="line"><span>      GROUP_NAME_WHITE_LIST: &#39;[&quot;ChatGPT测试群&quot;, &quot;ChatGPT测试群2&quot;]&#39;</span></span>
<span class="line"><span>      IMAGE_CREATE_PREFIX: &#39;[&quot;画&quot;, &quot;看&quot;, &quot;找&quot;]&#39;</span></span>
<span class="line"><span>      CONVERSATION_MAX_TOKENS: 1000</span></span>
<span class="line"><span>      SPEECH_RECOGNITION: &#39;False&#39;</span></span>
<span class="line"><span>      CHARACTER_DESC: &#39;你是ChatGPT, 一个由OpenAI训练的大型语言模型, 你旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&#39;</span></span>
<span class="line"><span>      EXPIRES_IN_SECONDS: 3600</span></span>
<span class="line"><span>      USE_GLOBAL_PLUGIN_CONFIG: &#39;True&#39;</span></span>
<span class="line"><span>      USE_LINKAI: &#39;False&#39;</span></span>
<span class="line"><span>      LINKAI_API_KEY: &#39;&#39;</span></span>
<span class="line"><span>      LINKAI_APP_CODE: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_APP_ID: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_API_SECRET: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_API_KEY: &#39;&#39;</span></span></code></pre></div><p><code>group_name_white_list</code>：开启自动回复的群名称列表，如果想对所有群聊生效，可以直接填写 <code>&quot;group_name_white_list&quot;: [&quot;ALL_GROUP&quot;]</code></p><p></p><p>4、服务启动</p><p>docker-compose pull # 启动鏡像 docker-compose up -d # 启动 docker logs -f chatgpt-on-wechat # 查看日志</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240509232502.png" alt=""></p><p>在日志中看到微信二维码，微信扫码登录，用于扫码登录的账号已经变身为机器人了，让你的好友给你发消息或在群聊@你都会触发自动回复，效果如下图：</p><p>这里我们设置的是以 bot 开头即为机器人回答，其他情况下号主本人回答。群聊中使用需要@对应账号，然后再以 bot 开头进行提问。</p><p>nohup python3 app.py &amp; tail -f nohup.out</p>`,62),i=[t];function c(o,l,h,r,u,d){return n(),s("div",null,i)}const _=a(e,[["render",c]]);export{m as __pageData,_ as default};
