import{_ as i,c as t,m as n,t as s,a4 as e,o}from"./chunks/framework.4aTu-Nia.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/01 AI/AI 智能体/Coze 实战求职岗位推荐.md","filePath":"docs/01 AI/AI 智能体/Coze 实战求职岗位推荐.md"}'),c={name:"docs/01 AI/AI 智能体/Coze 实战求职岗位推荐.md"},r=e('<p>在当今信息过载的时代，求职者也面临着海量的岗位信息，像 Boss 直聘、智联招聘、猎聘等招聘平台职位众多，求职者可能需要花费大量时间筛选</p><p>都知道 AI 智能体很火，那能否实现一个工作流，用 AI 技术来提高寻找求职岗位的效率呢，通过<strong>自然语言交互</strong>从<strong>多个平台聚合</strong>获取<strong>符合条件</strong>的岗位</p><p>实际上是可以的，我使用 coze 创建了一个智能体，用户只需输入所在的城市和感兴趣的岗位名称等信息，就能够迅速筛选出求职岗位</p><h2 id="一、效果演示" tabindex="-1">一、效果演示 <a class="header-anchor" href="#一、效果演示" aria-label="Permalink to &quot;一、效果演示&quot;">​</a></h2><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727133423.png" alt=""></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727132122.png" alt=""></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727132613.png" alt=""></p><h2 id="二、工作流设计" tabindex="-1">二、工作流设计 <a class="header-anchor" href="#二、工作流设计" aria-label="Permalink to &quot;二、工作流设计&quot;">​</a></h2><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240726230624.png" alt=""></p><h3 id="_1、整体流程" tabindex="-1">1、整体流程 <a class="header-anchor" href="#_1、整体流程" aria-label="Permalink to &quot;1、整体流程&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240726224424.png" alt=""></p><h3 id="_2、开始模块" tabindex="-1">2、开始模块 <a class="header-anchor" href="#_2、开始模块" aria-label="Permalink to &quot;2、开始模块&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727001846.png" alt=""></p><h3 id="_3、信息提取" tabindex="-1">3、信息提取 <a class="header-anchor" href="#_3、信息提取" aria-label="Permalink to &quot;3、信息提取&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727133618.png" alt=""></p>',15),l=e('<h3 id="_4、获取岗位" tabindex="-1">4、获取岗位 <a class="header-anchor" href="#_4、获取岗位" aria-label="Permalink to &quot;4、获取岗位&quot;">​</a></h3><p>猎聘：</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727133656.png" alt=""></p><p>智联招聘：</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727133711.png" alt=""></p><h3 id="_5、信息整合" tabindex="-1">5、信息整合 <a class="header-anchor" href="#_5、信息整合" aria-label="Permalink to &quot;5、信息整合&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727133750.png" alt=""></p>',7),h=e('<h3 id="_6、结束模块" tabindex="-1">6、结束模块 <a class="header-anchor" href="#_6、结束模块" aria-label="Permalink to &quot;6、结束模块&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727002201.png" alt=""></p><h2 id="三、测试与发布" tabindex="-1">三、测试与发布 <a class="header-anchor" href="#三、测试与发布" aria-label="Permalink to &quot;三、测试与发布&quot;">​</a></h2><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240727002312.png" alt=""></p><h2 id="四、复盘与总结" tabindex="-1">四、复盘与总结 <a class="header-anchor" href="#四、复盘与总结" aria-label="Permalink to &quot;四、复盘与总结&quot;">​</a></h2><p>通过智能体的方式获取求职岗位，或许能提升求职效率，当然这个智能体还有优化的空间，比如接入 boss 直聘的岗位，本文只是提供一个思路，可以结合自己的工作场景进行优化</p><p>后台回复【求职推荐】可以体验下这个智能体</p>',7);function p(a,_,m,g,u,d){return o(),t("div",null,[r,n("p",null,[n("code",null,"角色：变量提取专家 背景：从用户输入"+s(a.input)+"中提取招聘岗位相关信息 输出格式：变量名称和对应值 输出要求：将用户输入中的信息提取为指定格式的变量 jobName：岗位名称，类型为字符串，比如前端开发，如果未涉及，默认值是不限 city：城市，类型为字符串，比如北京，如果未涉及，默认值是不限 salaryFloor：薪资下限，类型为数字，比如最低20k对应20000，如果未涉及，默认值是0 salaryCap：薪资上限，类型为数字，比如最高30k对应30000，如果未涉及，默认值等于 500000 workYear：工作经验，类型为数字，比如5年工作经验对应5，如果未涉及，默认值是0 eduLeve：学历要求，类型为字符串，比如本科/硕士/博士，如果未涉及，默认值是不限 ",1)]),l,n("p",null,[n("code",null,"整理 "+s(a.jd1)+" 和 "+s(a.jd2)+"，按照表格形式输出岗位，并且要过滤不符合 "+s(a.condition)+" 要求 的岗位，字段包括城市、公司名称、公司规模、岗位名称、薪资、JD 详情链接，模板如下，每个岗位之间空一行 1、岗位1：公司名称-岗位名称 | 来源 城市： 公司规模： 薪资： 岗位详情链接： 2、岗位2：公司名称-岗位名称 | 来源 城市： 公司规模： 薪资： 岗位详情链接： ",1)]),h])}const f=i(c,[["render",p]]);export{q as __pageData,f as default};
