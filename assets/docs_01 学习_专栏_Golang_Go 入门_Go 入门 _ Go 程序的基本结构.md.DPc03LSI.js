import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.4aTu-Nia.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/01 学习/专栏/Golang/Go 入门/Go 入门 | Go 程序的基本结构.md","filePath":"docs/01 学习/专栏/Golang/Go 入门/Go 入门 | Go 程序的基本结构.md"}'),n={name:"docs/01 学习/专栏/Golang/Go 入门/Go 入门 | Go 程序的基本结构.md"},e=t(`<p>Go 语言程序的基本结构通常包含以下几个部分：</p><p>1、<strong>包声明（Package Declaration）</strong>：每个 Go 程序都是由包组成的。程序运行的入口是 <code>main</code> 包。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span></code></pre></div><p>2、<strong>引入包（Import Packages）</strong>：这里你可以引入 Go 标准库中的包，或者其他第三方包。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>3、<strong>函数（Functions）</strong>：<code>main</code> 函数是每个可执行程序必须包含的入口函数。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>4、<strong>变量声明（Variable Declarations）</strong>：在 Go 中，你可以在函数内或全局范围内声明变量。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalVar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span></span></code></pre></div><p>5、<strong>常量声明（Constants）</strong>：常量是一个简单的值，一旦被声明之后在程序运行期间不会改变。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14</span></span></code></pre></div><p>6、<strong>类型声明（Type Declarations）</strong>：可以声明新的类型或类型别名。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span></span></code></pre></div><p>7、<strong>语句和表达式（Statements and Expressions）</strong>：这些是构成程序逻辑的基础，例如循环、条件判断等。</p><p>8、<strong>注释（Comments）</strong>：用于解释代码，不会被程序执行。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这是一个注释</span></span></code></pre></div><p>每个 Go 程序至少包含 <code>main</code> 包和 <code>main</code> 函数，这是程序的入口点。在这个结构下，你可以根据需求添加更多的包、变量、常量、类型和其他函数。</p>`,17),p=[e];function l(o,h,d,k,g,c){return a(),i("div",null,p)}const y=s(n,[["render",l]]);export{u as __pageData,y as default};
