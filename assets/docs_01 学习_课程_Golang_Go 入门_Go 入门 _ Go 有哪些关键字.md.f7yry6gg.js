import{_ as o,c as t,o as r,a4 as e}from"./chunks/framework.4aTu-Nia.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/01 学习/课程/Golang/Go 入门/Go 入门 | Go 有哪些关键字.md","filePath":"docs/01 学习/课程/Golang/Go 入门/Go 入门 | Go 有哪些关键字.md"}'),s={name:"docs/01 学习/课程/Golang/Go 入门/Go 入门 | Go 有哪些关键字.md"},n=e('<p>Go 语言中的关键字是保留字，用于在程序中表示特定的语法结构，截至目前 Go 语言共有 25 个关键字</p><h3 id="程序声明和定义" tabindex="-1">程序声明和定义 <a class="header-anchor" href="#程序声明和定义" aria-label="Permalink to &quot;程序声明和定义&quot;">​</a></h3><p>1、<strong>package</strong>: 定义一个包的名称，每个 Go 文件都以包声明开始。</p><p>2、<strong>import</strong>: 引入其他包的内容。</p><h3 id="类型和声明" tabindex="-1">类型和声明 <a class="header-anchor" href="#类型和声明" aria-label="Permalink to &quot;类型和声明&quot;">​</a></h3><p>3、<strong>var</strong>: 用于声明变量。</p><p>4、<strong>const</strong>: 用于声明常量。</p><p>5、<strong>type</strong>: 用于声明新的类型或类型别名。</p><p>6、<strong>struct</strong>: 用于定义结构体，它是一种聚合数据的方式。</p><p>7、<strong>interface</strong>: 用于定义接口，指定一组方法签名。</p><p>8、<strong>map</strong>: 用于声明一个映射类型，它是一种键值对集合。</p><p>9、<strong>chan</strong>: 用于声明操作通道类型，用于在 goroutines 之间传递消息。</p><h3 id="函数和流程控制" tabindex="-1">函数和流程控制 <a class="header-anchor" href="#函数和流程控制" aria-label="Permalink to &quot;函数和流程控制&quot;">​</a></h3><p>10、<strong>func</strong>: 用于定义函数。</p><p>11、<strong>return</strong>: 从函数返回一个或多个值。</p><p>12、<strong>go</strong>: 用于启动一个新的 goroutine（轻量级线程）。</p><p>13、<strong>defer</strong>: 延迟执行一个函数，直到包围的函数执行结束。</p><p>14、<strong>if</strong>: 条件语句，用于基于条件执行不同的代码块。</p><p>15、<strong>else</strong>: <code>if</code> 语句的扩展部分，用于在条件不满足时执行代码。</p><p>16、<strong>switch</strong>: 用于基于不同的条件执行不同的代码块。</p><p>17、<strong>case</strong>: <code>switch</code> 语句的一个分支。</p><p>18、<strong>default</strong>: <code>switch</code> 或 <code>select</code> 语句的默认分支。</p><p>19、<strong>for</strong>: 循环语句，用于重复执行代码块。</p><p>20、<strong>range</strong>: 与 <code>for</code> 循环一起使用，用于迭代数组、切片、字符串、映射或通道。</p><p>21、<strong>select</strong>: 用于等待多个通信操作（channel 操作）之一完成。</p><p>22、<strong>break</strong>: 终止当前的 <code>for</code>、<code>switch</code> 或 <code>select</code> 语句的执行。</p><p>23、<strong>continue</strong>: 跳过当前 <code>for</code> 循环的剩余部分，开始下一次迭代。</p><p>24、<strong>fallthrough</strong>: 在 <code>switch</code> 语句中，强制执行下一个 <code>case</code>。</p><p>25、<strong>goto</strong>: 无条件地跳转到同一函数内的标签指定位置。</p>',29),a=[n];function c(p,g,d,_,i,l){return r(),t("div",null,a)}const u=o(s,[["render",c]]);export{f as __pageData,u as default};
