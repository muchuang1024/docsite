import{_ as s,c as a,o as n,a4 as p}from"./chunks/framework.4aTu-Nia.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03 博客/教程/搭建 AI 微信机器人.md","filePath":"docs/03 博客/教程/搭建 AI 微信机器人.md"}'),e={name:"docs/03 博客/教程/搭建 AI 微信机器人.md"},c=p(`<h2 id="一、效果展示" tabindex="-1">一、效果展示 <a class="header-anchor" href="#一、效果展示" aria-label="Permalink to &quot;一、效果展示&quot;">​</a></h2><p>1、询问机器人有哪些技能</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213152.png" alt=""></p><p>2、询问今天的天气</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213236.png" alt="image.png"></p><p>3、询问今天的新闻</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213321.png" alt=""></p><h2 id="一、准备大模型账号" tabindex="-1">一、准备大模型账号 <a class="header-anchor" href="#一、准备大模型账号" aria-label="Permalink to &quot;一、准备大模型账号&quot;">​</a></h2><p>购买画图</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510205333.png" alt="image.png"></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510205440.png" alt=""></p><h2 id="一、安装-docker" tabindex="-1">一、安装 Docker <a class="header-anchor" href="#一、安装-docker" aria-label="Permalink to &quot;一、安装 Docker&quot;">​</a></h2><p>前往 <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noreferrer">docker官网</a> 进行下载安装，安装后，在命令行 执行命令 <code>docker -v</code> ，如果出现版本号则代表安装成功</p><p>1、创建项目文件夹</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir wechat-bot</span></span>
<span class="line"><span>cd wechat-bot</span></span></code></pre></div><p>2、下载 docker-compose.yml 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wget https://open-1317903499.cos.ap-guangzhou.myqcloud.com/docker-compose.yml</span></span></code></pre></div><p>3、修改 docker-compose.yml 配置</p><p>下载完成后打开 <code>docker-compose.yml</code> 修改配置， <code>MODEL</code>, <code>API_KEY</code>、<code>GROUP_NAME_WHITE_LIST</code> 等。</p><p>这里我采用的模型是讯飞星火，你也可以用 openapi，选择模型好，配置相应的 api_key 即可</p><p>完成个人实名认证后，可免费购买 2000000 token</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240509234622.png" alt="image.png"></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>version: &#39;2.0&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  chatgpt-on-wechat:</span></span>
<span class="line"><span>    image: zhayujie/chatgpt-on-wechat</span></span>
<span class="line"><span>    container_name: chatgpt-on-wechat</span></span>
<span class="line"><span>    security_opt:</span></span>
<span class="line"><span>      - seccomp:unconfined</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      OPEN_AI_API_KEY: &#39;YOUR API KEY&#39;</span></span>
<span class="line"><span>      MODEL: &#39;xunfei&#39;</span></span>
<span class="line"><span>      PROXY: &#39;&#39;</span></span>
<span class="line"><span>      SINGLE_CHAT_PREFIX: &#39;[&quot;bot&quot;, &quot;@bot&quot;]&#39;</span></span>
<span class="line"><span>      SINGLE_CHAT_REPLY_PREFIX: &#39;&quot;[bot] &quot;&#39;</span></span>
<span class="line"><span>      GROUP_CHAT_PREFIX: &#39;[&quot;@bot&quot;]&#39;</span></span>
<span class="line"><span>      GROUP_NAME_WHITE_LIST: &#39;[&quot;ChatGPT测试群&quot;, &quot;ChatGPT测试群2&quot;]&#39;</span></span>
<span class="line"><span>      IMAGE_CREATE_PREFIX: &#39;[&quot;画&quot;, &quot;看&quot;, &quot;找&quot;]&#39;</span></span>
<span class="line"><span>      CONVERSATION_MAX_TOKENS: 1000</span></span>
<span class="line"><span>      SPEECH_RECOGNITION: &#39;False&#39;</span></span>
<span class="line"><span>      CHARACTER_DESC: &#39;你是ChatGPT, 一个由OpenAI训练的大型语言模型, 你旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&#39;</span></span>
<span class="line"><span>      EXPIRES_IN_SECONDS: 3600</span></span>
<span class="line"><span>      USE_GLOBAL_PLUGIN_CONFIG: &#39;True&#39;</span></span>
<span class="line"><span>      USE_LINKAI: &#39;False&#39;</span></span>
<span class="line"><span>      LINKAI_API_KEY: &#39;&#39;</span></span>
<span class="line"><span>      LINKAI_APP_CODE: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_APP_ID: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_API_SECRET: &#39;&#39;</span></span>
<span class="line"><span>      XUNFEI_API_KEY: &#39;&#39;</span></span></code></pre></div><p><code>group_name_white_list</code>：开启自动回复的群名称列表，如果想对所有群聊生效，可以直接填写 <code>&quot;group_name_white_list&quot;: [&quot;ALL_GROUP&quot;]</code></p><p>创建讯飞应用，会看到 APPKEY 相关信息，可以采用讯飞模型   <img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240509232020.png" alt=""></p><p>4、服务启动</p><p>docker-compose pull # 启动鏡像 docker-compose up -d # 启动 docker logs -f chatgpt-on-wechat # 查看日志</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240509232502.png" alt=""></p><p>在日志中看到微信二维码，微信扫码登录，用于扫码登录的账号已经变身为机器人了，让你的好友给你发消息或在群聊@你都会触发自动回复，效果如下图：</p><p>这里我们设置的是以 bot 开头即为机器人回答，其他情况下号主本人回答。群聊中使用需要@对应账号，然后再以 bot 开头进行提问。</p><p>nohup python3 app.py &amp; tail -f nohup.out</p>`,31),o=[c];function t(i,l,u,_,d,h){return n(),a("div",null,o)}const m=s(e,[["render",t]]);export{g as __pageData,m as default};
