import{_ as a,c as s,o as t,a4 as e}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03 博客/创作中/Coze 实战大模型日报推送到微信.md","filePath":"docs/03 博客/创作中/Coze 实战大模型日报推送到微信.md"}'),n={name:"docs/03 博客/创作中/Coze 实战大模型日报推送到微信.md"},p=e(`<p>本文实现的功能：发送消息到微信/微信群</p><p>购买云服务器 -&gt; 部署发送消息到微信的接口</p><p>coze -&gt; 添加低代码机器人 (调用上一步的接口）</p><p>开始-&gt;抓取大模型相关新闻-&gt;阅读新闻链接获得新闻内容-&gt;大模型提取摘要-&gt;大模型 Markdown 合成 -&gt; 发送微信消息 -&gt; 结束</p><h2 id="一、购买云服务器" tabindex="-1">一、购买云服务器 <a class="header-anchor" href="#一、购买云服务器" aria-label="Permalink to &quot;一、购买云服务器&quot;">​</a></h2><p>腾讯对【新用户】提供免费试用服务器的，即腾讯云的 <a href="https://cloud.tencent.com/act/pro/free" target="_blank" rel="noreferrer">轻量应用服务器</a></p><h3 id="_1、进入云平台" tabindex="-1">1、进入<a href="https://cloud.tencent.com/act/pro/free" target="_blank" rel="noreferrer">云平台</a> <a class="header-anchor" href="#_1、进入云平台" aria-label="Permalink to &quot;1、进入[云平台](https://cloud.tencent.com/act/pro/free)&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518110143.png" alt=""></p><h3 id="_2、点击试用" tabindex="-1">2、点击试用 <a class="header-anchor" href="#_2、点击试用" aria-label="Permalink to &quot;2、点击试用&quot;">​</a></h3><p>选择镜像为 Docker CE 19.03.9，内置安装了 Docker</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518110337.png" alt=""></p><h3 id="_3、人脸认证" tabindex="-1">3、人脸认证 <a class="header-anchor" href="#_3、人脸认证" aria-label="Permalink to &quot;3、人脸认证&quot;">​</a></h3><p>使用微信扫码进行人脸认证</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518110420.png" alt="i"></p><h3 id="_4、查看实例" tabindex="-1">4、查看实例 <a class="header-anchor" href="#_4、查看实例" aria-label="Permalink to &quot;4、查看实例&quot;">​</a></h3><p>认证完后，进入实例页面；如果页面不显示，可以重新点击使用进入</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518110709.png" alt="image.png"></p><p>进入服务器菜单，查看刚创建好的服务器实例</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518110840.png" alt="image.png"></p><h3 id="_5、重置密码" tabindex="-1">5、重置密码 <a class="header-anchor" href="#_5、重置密码" aria-label="Permalink to &quot;5、重置密码&quot;">​</a></h3><p>点击 <strong>更多 &gt; 重置密码</strong>，进行修改密码，并记住密码，用于接下来配置环境使用。</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518112201.png" alt="image.png"></p><h3 id="_6、登录服务器" tabindex="-1">6、登录服务器 <a class="header-anchor" href="#_6、登录服务器" aria-label="Permalink to &quot;6、登录服务器&quot;">​</a></h3><p>点击服务器名称，进入详情页选择密钥方式登录，这种登录方式，确保权限最大</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518112445.png" alt="image.png"></p><p>点击登录按钮，进可进入服务器，已经内置好了 Docker</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518112637.png" alt=""></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518111418.png" alt="image.png"></p><h2 id="二、项目安装" tabindex="-1">二、项目安装 <a class="header-anchor" href="#二、项目安装" aria-label="Permalink to &quot;二、项目安装&quot;">​</a></h2><h3 id="_1、docker-方式安装" tabindex="-1">1、Docker 方式安装 <a class="header-anchor" href="#_1、docker-方式安装" aria-label="Permalink to &quot;1、Docker 方式安装&quot;">​</a></h3><p>1）拉取最新镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker pull dannicool/docker-wechatbot-webhook</span></span></code></pre></div><p>2）docker 部署</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 启动容器并映射日志目录，日志按天维度生成，e.g: app.2024-01-01.log，自定义登录 token</span></span>
<span class="line"><span>docker run -d --name wxBotWebhook -p 3001:3001 -e LOGIN_API_TOKEN=&quot;zqlYxKvitwF8&quot; -v ~/wxBot_logs:/app/log dannicool/docker-wechatbot-webhook</span></span></code></pre></div><p>自定义 token 的好处是微信下线后，不用每次生成不同的 token</p><p>3）登录</p><p>找到二维码登录地址，扫码登录微信</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wxBotWebhook</span></span></code></pre></div><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/wechat.png" alt=""></p><p>4） 解决错误</p><p>容器启动报错 WARNING: IPv4 forwarding is disabled. Networking will not work</p><p>解决办法</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>vim /etc/sysctl.conf</span></span>
<span class="line"><span>设置 net.ipv4.ip_forward=1</span></span></code></pre></div><p>重启 network 服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>systemctl restart network</span></span></code></pre></div><p>查看是否修改成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sysctl net.ipv4.ip_forward</span></span></code></pre></div><h3 id="_2、非-docker-方式安装" tabindex="-1">2、非 Docker 方式安装 <a class="header-anchor" href="#_2、非-docker-方式安装" aria-label="Permalink to &quot;2、非 Docker 方式安装&quot;">​</a></h3><p>需要提前在服务器上安装 git 和 npm，然后执行下面的步骤</p><p>1）下载项目</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git clone git@github.com:danni-cool/wechatbot-webhook.git</span></span></code></pre></div><p>2）进入项目目录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd wechatbot-webhook</span></span></code></pre></div><p>3）安装依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install</span></span></code></pre></div><p>4）服务启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm run start</span></span></code></pre></div><p>5）登录</p><p>找到二维码登录地址，扫码登录微信</p><h2 id="三、测试" tabindex="-1">三、测试 <a class="header-anchor" href="#三、测试" aria-label="Permalink to &quot;三、测试&quot;">​</a></h2><h3 id="_1、添加防火墙规则" tabindex="-1">1、添加防火墙规则 <a class="header-anchor" href="#_1、添加防火墙规则" aria-label="Permalink to &quot;1、添加防火墙规则&quot;">​</a></h3><p>允许微信 http 接口 3001 可访问，这样调用公网 IP + 端口号，就能连接成功了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240518230216.png" alt="image.png"></p><h3 id="_2、发送消息到微信群" tabindex="-1">2、发送消息到微信群 <a class="header-anchor" href="#_2、发送消息到微信群" aria-label="Permalink to &quot;2、发送消息到微信群&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>curl --location &#39;http://101.42.24.100:3001/webhook/msg/v2?token=zqlYxKvitwF8&#39; \\</span></span>
<span class="line"><span>--header &#39;Content-Type: application/json&#39; \\</span></span>
<span class="line"><span>--data &#39;{</span></span>
<span class="line"><span>    &quot;to&quot;: &quot;一人企业&quot;,</span></span>
<span class="line"><span>     &quot;isRoom&quot;: true,</span></span>
<span class="line"><span>    &quot;data&quot;: { &quot;type&quot;: &quot;text&quot;, &quot;content&quot;: &quot;你好&quot; }</span></span>
<span class="line"><span>}&#39;</span></span></code></pre></div><h3 id="_3、发送消息到微信" tabindex="-1">3、发送消息到微信 <a class="header-anchor" href="#_3、发送消息到微信" aria-label="Permalink to &quot;3、发送消息到微信&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>curl --location &#39;http://101.42.24.100:3001/webhook/msg/v2?token=zqlYxKvitwF8&#39; \\</span></span>
<span class="line"><span>--header &#39;Content-Type: application/json&#39; \\</span></span>
<span class="line"><span>--data &#39;{</span></span>
<span class="line"><span>    &quot;to&quot;: &quot;木川&quot;,</span></span>
<span class="line"><span>     &quot;isRoom&quot;: false,</span></span>
<span class="line"><span>    &quot;data&quot;: { &quot;type&quot;: &quot;text&quot;, &quot;content&quot;: &quot;你好&quot; }</span></span>
<span class="line"><span>}&#39;</span></span></code></pre></div><p>如果遇到发送失败，可以清除日志，然后重新启动扫码登录</p><h2 id="四、coze-部署" tabindex="-1">四、Coze 部署 <a class="header-anchor" href="#四、coze-部署" aria-label="Permalink to &quot;四、Coze 部署&quot;">​</a></h2><p>Coze 是由字节跳动在海外推出的一个 AI 聊天机器人和应用程序编辑开发平台，专为开发下一代 AI 聊天机器人而设计。 无论您是否有编程经验，该平台都允许您快速创建各种类型的聊天机器人并将它们部署在不同的社交平台和消息传递应用程序上。</p><h3 id="_1、添加工作流" tabindex="-1">1、添加工作流 <a class="header-anchor" href="#_1、添加工作流" aria-label="Permalink to &quot;1、添加工作流&quot;">​</a></h3><h3 id="_2、添加-bot" tabindex="-1">2、添加 Bot <a class="header-anchor" href="#_2、添加-bot" aria-label="Permalink to &quot;2、添加 Bot&quot;">​</a></h3><p>只需要添加一个触发器，每天定时触发工作流</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240522204922.png" alt=""></p><p>设置触发器的触发时间和任务类型</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240522204959.png" alt=""></p><h3 id="_3、bot-发布" tabindex="-1">3、Bot 发布 <a class="header-anchor" href="#_3、bot-发布" aria-label="Permalink to &quot;3、Bot 发布&quot;">​</a></h3><p>Bot 发布飞书后，触发器才会生效，所以需要先配置飞书授权，然后发布的时候平台勾选飞书</p><p>1）配置飞书授权</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240520160417.png" alt="image.png"></p><p>2）同意授权</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240520161646.png" alt=""></p><p>3）勾选飞书发布</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240520161742.png" alt=""></p><p>4）等待审核通过</p><p>大概几分钟就能审核通过，审核通过后就可以自动触发给你发送消息了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240520161853.png" alt=""></p>`,87),i=[p];function o(c,l,h,r,g,d){return t(),s("div",null,i)}const b=a(n,[["render",o]]);export{m as __pageData,b as default};
