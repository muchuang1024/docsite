import{_ as a,c as e,o,a4 as n}from"./chunks/framework.4aTu-Nia.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/04 归档/VsCode 安装 c++环境最佳实践.md","filePath":"docs/04 归档/VsCode 安装 c++环境最佳实践.md"}'),s={name:"docs/04 归档/VsCode 安装 c++环境最佳实践.md"},c=n(`<h2 id="安装-vscode" tabindex="-1">安装 VsCode <a class="header-anchor" href="#安装-vscode" aria-label="Permalink to &quot;安装 VsCode&quot;">​</a></h2><h2 id="配置编译器" tabindex="-1">配置编译器 <a class="header-anchor" href="#配置编译器" aria-label="Permalink to &quot;配置编译器&quot;">​</a></h2><p>推荐 GCC (GNU Compiler Collection) 编译器， 一个开源编译器，支持多种编程语言，包括C和C++。适用于Linux、macOS和Windows。</p><h2 id="新建-c-程序" tabindex="-1">新建 c++ 程序 <a class="header-anchor" href="#新建-c-程序" aria-label="Permalink to &quot;新建 c++ 程序&quot;">​</a></h2><p>文件后缀名 .cpp，比如 hello.cpp 如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#include &lt;iostream&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>int main() {</span></span>
<span class="line"><span>    // 输出 &quot;Hello, World!&quot; 在控制台</span></span>
<span class="line"><span>    std::cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; std::endl;</span></span>
<span class="line"><span>    return 0;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="编译运行" tabindex="-1">编译运行 <a class="header-anchor" href="#编译运行" aria-label="Permalink to &quot;编译运行&quot;">​</a></h2><p>首先<code>command + S</code>保存，然后在下面的终端中（按<code>command+J</code>可打开底栏）</p><p>输入 <code>g++ hello_world.cpp -o hello</code> 编译 再输入<code>./hello_world</code> 运行程序</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240621002358.png" alt=""></p><h2 id="安装code-runner扩展" tabindex="-1">安装Code Runner扩展 <a class="header-anchor" href="#安装code-runner扩展" aria-label="Permalink to &quot;安装Code Runner扩展&quot;">​</a></h2><p>Code Runner是一个非常受欢迎的扩展，可以让你直接在VSCode中运行代码。它支持多种语言，包括C++。安装方法同上，搜索并安装“Code Runner”</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240621002053.png" alt=""></p><p>安装 <code>code runner</code> 插件后，右上角会出现运行按钮，点击按钮即可自动编译运行，省去了手输<code>g++ xxx.cpp -o xxx</code>，会在下方控制台直接输出结果</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240621001856.png" alt=""></p><h2 id="安装c-c-扩展" tabindex="-1">安装C/C++扩展 <a class="header-anchor" href="#安装c-c-扩展" aria-label="Permalink to &quot;安装C/C++扩展&quot;">​</a></h2><p>打开VSCode，进入扩展视图（点击左侧的扩展图标或使用快捷键Ctrl+Shift+X），搜索并安装“C/C++”扩展，这是由Microsoft提供的官方扩展，提供了智能感知、调试支持等功能。</p><h2 id="配置构建任务" tabindex="-1">配置构建任务 <a class="header-anchor" href="#配置构建任务" aria-label="Permalink to &quot;配置构建任务&quot;">​</a></h2><p>VSCode允许你创建自定义构建任务，以编译和链接你的C++项目。你可以在<code>.vscode</code>目录下创建一个<code>tasks.json</code>文件来定义这些任务。</p><h2 id="配置调试器" tabindex="-1">配置调试器 <a class="header-anchor" href="#配置调试器" aria-label="Permalink to &quot;配置调试器&quot;">​</a></h2><h2 id="安装其他有用的扩展" tabindex="-1">安装其他有用的扩展 <a class="header-anchor" href="#安装其他有用的扩展" aria-label="Permalink to &quot;安装其他有用的扩展&quot;">​</a></h2><h2 id="学习和使用快捷键" tabindex="-1">学习和使用快捷键 <a class="header-anchor" href="#学习和使用快捷键" aria-label="Permalink to &quot;学习和使用快捷键&quot;">​</a></h2><p>VSCode提供了许多快捷键来提高开发效率。熟悉这些快捷键可以大大加快你的开发速度。</p>`,23),t=[c];function l(d,i,r,p,h,u){return o(),e("div",null,t)}const C=a(s,[["render",l]]);export{_ as __pageData,C as default};
